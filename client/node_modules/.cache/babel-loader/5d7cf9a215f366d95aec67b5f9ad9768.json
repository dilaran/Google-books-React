{"ast":null,"code":"var _jsxFileName = \"/Users/dn/Google-books-React/client/src/pages/Books.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  var _this2 = this;\n\n  // Setting our component's initial state\n  state = {\n    books: [],\n    title: \"\",\n    author: \"\",\n    description: \"\",\n    image: \"\",\n    link: \"\"\n  }; // Load all books and store them with setBooks\n\n  useEffect(function () {\n    loadBooks();\n  }, []); // Loads all books and sets them to books\n\n  function loadBooks() {\n    var _this = this;\n\n    API.getBooks().then(function (res) {\n      return _this.setState({\n        books: res.data,\n        title: \"\",\n        author: \"\",\n        description: \"\",\n        image: \"\",\n        link: \"\"\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(function (res) {\n      return loadBooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } // // Handles updating component state when the user types into the input field\n  // function handleInputChange(event) {\n  //   const { name, value } = event.target;\n  //   setFormObject({...formObject, [name]: value})\n  // };\n  // // When the form is submitted, use the API.saveBook method to save the book data\n  // // Then reload books from the database\n  // function handleFormSubmit(event) {\n  //   event.preventDefault();\n  //   if (formObject.title ) {\n  //     API.saveBook({\n  //       title: formObject.title,\n  //       author: formObject.author,\n  //     })\n  //       .then(res => loadBooks())\n  //       .catch(err => console.log(err));\n  //   }\n  // };\n\n\n  return React.createElement(Container, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Your Saved Books\"), this.state.books.length ? React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, this.state.books.map(function (book) {\n    return React.createElement(ListItem, {\n      key: book._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"float-left mb-1 mr-4\",\n      src: book.image,\n      alt: book.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, book.title), React.createElement(Col, {\n      size: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(DeleteBtn, {\n      onClick: function onClick() {\n        return _this2.deleteBook(book._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Author: \", book.author), React.createElement(\"p\", {\n      className: \"text-justify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Synopsis: \", book.description));\n  })) : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"No Results to Display\"))));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/dn/Google-books-React/client/src/pages/Books.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","FormBtn","Books","state","books","title","author","description","image","link","loadBooks","getBooks","then","res","setState","data","catch","err","console","log","deleteBook","id","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input,  FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  // Setting our component's initial state\n  state = {\n    books: [],\n    title: \"\",\n    author: \"\",\n    description: \"\",\n    image: \"\",\n    link: \"\"\n  };\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n  // Loads all books and sets them to books\n  function loadBooks() {\n    API.getBooks()\n      .then(res =>\n        this.setState({\n          books: res.data,\n          title: \"\",\n          author: \"\",\n          description: \"\",\n          image: \"\",\n          link: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    API.deleteBook(id)\n      .then(res => loadBooks())\n      .catch(err => console.log(err));\n  }\n\n  // // Handles updating component state when the user types into the input field\n  // function handleInputChange(event) {\n  //   const { name, value } = event.target;\n  //   setFormObject({...formObject, [name]: value})\n  // };\n\n  // // When the form is submitted, use the API.saveBook method to save the book data\n  // // Then reload books from the database\n  // function handleFormSubmit(event) {\n  //   event.preventDefault();\n  //   if (formObject.title ) {\n  //     API.saveBook({\n  //       title: formObject.title,\n  //       author: formObject.author,\n  //     })\n  //       .then(res => loadBooks())\n  //       .catch(err => console.log(err));\n  //   }\n  // };\n\n    return (\n<Container fluid>\n        <Row>\n          <Container>\n            <h1>Your Saved Books</h1>\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    <img\n                      className=\"float-left mb-1 mr-4\"\n                      src={book.image}\n                      alt={book.title}\n                    />\n                    <Row>\n                        <u>{book.title}</u>\n                      <Col size=\"4\">\n                        <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                      </Col>\n                    </Row>\n                    <p>Author: {book.author}</p>\n                    <p className=\"text-justify\">Synopsis: {book.description}</p>\n\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Container>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}