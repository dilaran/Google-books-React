{"ast":null,"code":"import _classCallCheck from \"/Users/dn/Google-books-React/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dn/Google-books-React/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dn/Google-books-React/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dn/Google-books-React/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dn/Google-books-React/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dn/Google-books-React/client/src/pages/Books.js\";\n// import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\"; //import Jumbotron from \"../components/Jumbotron\";\n\nimport API from \"../utils/API\";\nimport React, { Component } from \"react\"; //import { Link } from \"react-router-dom\";\n\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\"; //import { Input,  FormBtn } from \"../components/Form\";\n\nvar Books = /*#__PURE__*/function (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      title: \"\",\n      author: \"\",\n      description: \"\",\n      image: \"\",\n      link: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    // Load all books and store them with setBooks\n    value: function componentDidMount() {\n      this.loadBooks();\n    } // Loads all books and sets them to books\n    // loadBooks = () => {\n    //   API.getBooks()\n    //     .then(res =>\n    //       this.setState({\n    //         books: res.data,\n    //         title: \"\",\n    //         author: \"\",\n    //         description: \"\",\n    //         image: \"\",\n    //         link: \"\"\n    //       })\n    //     )\n    //     .catch(err => console.log(err));\n    // };\n    // Deletes a book from the database with a given id, then reloads books from the db\n    //  deleteBook=(id) => {\n    //     API.deleteBook(id)\n    //       .then(res => loadBooks())\n    //       .catch(err => console.log(err));\n    //   };\n    // // Handles updating component state when the user types into the input field\n    // function handleInputChange(event) {\n    //   const { name, value } = event.target;\n    //   setFormObject({...formObject, [name]: value})\n    // };\n    // // When the form is submitted, use the API.saveBook method to save the book data\n    // // Then reload books from the database\n    // function handleFormSubmit(event) {\n    //   event.preventDefault();\n    //   if (formObject.title ) {\n    //     API.saveBook({\n    //       title: formObject.title,\n    //       author: formObject.author,\n    //     })\n    //       .then(res => loadBooks())\n    //       .catch(err => console.log(err));\n    //   }\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Your Saved Books\"), this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"float-left mb-1 mr-4\",\n          src: book.image,\n          alt: book.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"u\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, book.title), React.createElement(Col, {\n          size: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deleteBook(book._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }))), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Author: \", book.author), React.createElement(\"p\", {\n          className: \"text-justify\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Synopsis: \", book.description));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/dn/Google-books-React/client/src/pages/Books.js"],"names":["DeleteBtn","API","React","Component","Col","Row","Container","List","ListItem","Books","state","books","title","author","description","image","link","loadBooks","length","map","book","_id","deleteBook"],"mappings":";;;;;;AAAA;AACA,OAAOA,SAAP,MAAsB,yBAAtB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B,C,CACA;;IAEMC,K;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,KAAK,EAAE,EALD;AAMNC,MAAAA,IAAI,EAAE;AANA,K;;;;;;AASR;wCACoB;AAClB,WAAKC,SAAL;AACD,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACF;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BACS;AAAA;;AACP,aACJ,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEG,KAAKP,KAAL,CAAWC,KAAX,CAAiBO,MAAjB,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACxB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,sBADZ;AAEE,UAAA,GAAG,EAAED,IAAI,CAACL,KAFZ;AAGE,UAAA,GAAG,EAAEK,IAAI,CAACR,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAME,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIQ,IAAI,CAACR,KAAT,CADJ,EAEE,oBAAC,GAAD;AAAK,UAAA,IAAI,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAW,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACU,UAAL,CAAgBF,IAAI,CAACC,GAArB,CAAN;AAAA,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFF,CANF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAYD,IAAI,CAACP,MAAjB,CAZF,EAaE;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAuCO,IAAI,CAACN,WAA5C,CAbF,CADwB;AAAA,OAAzB,CADH,CADD,GAsBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAxBJ,CADF,CADR,CADI;AAiCD;;;;EA5FiBX,S;;AA+FpB,eAAeM,KAAf","sourcesContent":["// import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\n//import Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport React, { Component } from \"react\";\n//import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n//import { Input,  FormBtn } from \"../components/Form\";\n\nclass Books extends Component {\n  // Setting our component's initial state\n  state = {\n    books: [],\n    title: \"\",\n    author: \"\",\n    description: \"\",\n    image: \"\",\n    link: \"\"\n  };\n\n  // Load all books and store them with setBooks\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  // Loads all books and sets them to books\n  // loadBooks = () => {\n  //   API.getBooks()\n  //     .then(res =>\n  //       this.setState({\n  //         books: res.data,\n  //         title: \"\",\n  //         author: \"\",\n  //         description: \"\",\n  //         image: \"\",\n  //         link: \"\"\n  //       })\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n//  deleteBook=(id) => {\n//     API.deleteBook(id)\n//       .then(res => loadBooks())\n//       .catch(err => console.log(err));\n//   };\n\n  // // Handles updating component state when the user types into the input field\n  // function handleInputChange(event) {\n  //   const { name, value } = event.target;\n  //   setFormObject({...formObject, [name]: value})\n  // };\n\n  // // When the form is submitted, use the API.saveBook method to save the book data\n  // // Then reload books from the database\n  // function handleFormSubmit(event) {\n  //   event.preventDefault();\n  //   if (formObject.title ) {\n  //     API.saveBook({\n  //       title: formObject.title,\n  //       author: formObject.author,\n  //     })\n  //       .then(res => loadBooks())\n  //       .catch(err => console.log(err));\n  //   }\n  // };\n  render() {\n    return (\n<Container fluid>\n        <Row>\n          <Container>\n            <h1>Your Saved Books</h1>\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    <img\n                      className=\"float-left mb-1 mr-4\"\n                      src={book.image}\n                      alt={book.title}\n                    />\n                    <Row>\n                        <u>{book.title}</u>\n                      <Col size=\"4\">\n                        <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                      </Col>\n                    </Row>\n                    <p>Author: {book.author}</p>\n                    <p className=\"text-justify\">Synopsis: {book.description}</p>\n\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Container>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}